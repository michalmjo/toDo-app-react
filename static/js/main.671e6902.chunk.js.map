{"version":3,"sources":["components/Popup.js","components/AddTask.js","components/Task.js","components/TaskList.js","components/TaskEdit.js","components/App.js","reportWebVitals.js","index.js"],"names":["Popup","props","className","AddTask","minDate","Date","toISOString","slice","allTask","state","text","typeTask","date","popup","handleChangeDate","e","setState","target","value","handleValueChange","handleChangePriority","currentTarget","getAttribute","task","document","querySelector","querySelectorAll","forEach","classList","remove","add","popupInput","handleAddTask","length","trim","addTask","console","log","setTimeout","maxDate","this","type","placeholder","onChange","htmlFor","min","max","onClick","Component","Task","style_one","color","style_two","trash","doneTask","id","active","important","finishDate","bind","style","imp","changeTask","time","toLocaleString","TaskList","activeTask","tasks","filter","item","sort","a","b","taskToDo","map","done","doneTasks","TaskEdit","valuePop","editText","handleInputPop","handleSubmitPop","preventDefault","changeTextInput","onSubmit","React","App","activeIndex","textPopup","isActive","currentId","deleteTask","index","findIndex","splice","getTime","showChangeArea","table","handleChangeTask","parentNode","closest","textContent","prevState","activeTasks","remainingTasks","xmlns","width","height","viewBox","cx","cy","rx","ry","fill","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.671e6902.chunk.js","sourcesContent":["import \"./Popup.css\";\r\n\r\nconst Popup = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"popup\">\r\n        <div className=\"popup__message\">\r\n          <p>You need type more that 2 letters</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Popup from \"./Popup\";\r\n\r\nimport \"./AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n  allTask = [];\r\n  state = {\r\n    text: \"\",\r\n    typeTask: null,\r\n    date: this.minDate,\r\n    popup: false,\r\n  };\r\n\r\n  handleChangeDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n  handleValueChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleChangePriority = (e) => {\r\n    const target = e.currentTarget.getAttribute(\"data-priority\");\r\n    const task = document.querySelector(`[data-priority=${target}]`);\r\n    this.allTask = document.querySelectorAll(\".type__task-priority\");\r\n    this.allTask.forEach((task) => task.classList.remove(\"active\"));\r\n\r\n    // task.forEach((task) => console.log(task.classList));\r\n\r\n    if (target === \"planned\") {\r\n      task.classList.add(\"active\");\r\n\r\n      if (task.className === \"type__task-priority\") {\r\n        this.setState({\r\n          typeTask: \"\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          typeTask: target,\r\n        });\r\n      }\r\n    } else if (target === \"priority\") {\r\n      task.classList.add(\"active\");\r\n\r\n      if (task.className === \"type__task-priority\") {\r\n        this.setState({\r\n          typeTask: \"\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          typeTask: target,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  popupInput = () => {\r\n    this.setState({\r\n      popup: true,\r\n    });\r\n  };\r\n\r\n  handleAddTask = () => {\r\n    const { text, typeTask, date } = this.state;\r\n    if (text.length > 2 && text.trim(\" \")) {\r\n      const task = this.props.addTask(text, typeTask, date);\r\n      if (task) {\r\n        this.allTask.forEach((task) => task.classList.remove(\"active\"));\r\n        this.setState({\r\n          text: \"\",\r\n          typeTask: \"\",\r\n          date: this.minDate,\r\n        });\r\n      }\r\n    } else {\r\n      console.log(\"za malo znaków\");\r\n      this.popupInput();\r\n      setTimeout(() => {\r\n        this.setState({\r\n          popup: false,\r\n        });\r\n      }, 2500);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n    return (\r\n      <>\r\n        <div className=\"task__add\">\r\n          <h2 className=\"task__add-header\">Create New Task</h2>\r\n          <input\r\n            className=\"task__input\"\r\n            type=\"text\"\r\n            placeholder=\"Add task...\"\r\n            value={this.state.text}\r\n            onChange={this.handleValueChange}\r\n          />\r\n          <h3 className=\"task__add-header-choise\">Chose date</h3>\r\n          <div className=\"date-area\">\r\n            <div className=\"calendar\">\r\n              {\" \"}\r\n              <i className=\"far fa-calendar-alt\"></i>\r\n            </div>\r\n            <div className=\"task__date\">\r\n              <label htmlFor=\"\">\r\n                <input\r\n                  className=\"task__input\"\r\n                  type=\"date\"\r\n                  min={this.minDate}\r\n                  max={maxDate}\r\n                  value={this.state.date}\r\n                  onChange={this.handleChangeDate}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"task__add-header-choise\">Task type</h3>\r\n          <div className=\"type__task\">\r\n            <div\r\n              onClick={this.handleChangePriority}\r\n              className=\"type__task-priority\"\r\n              data-priority=\"planned\"\r\n            >\r\n              <p>Planned</p>\r\n            </div>\r\n            <div\r\n              onClick={this.handleChangePriority}\r\n              className=\"type__task-priority\"\r\n              data-priority=\"priority\"\r\n            >\r\n              <p>Priority</p>\r\n            </div>\r\n          </div>\r\n          <button onClick={this.handleAddTask} className=\"btn-add\">\r\n            Create Task\r\n          </button>\r\n        </div>\r\n        {this.state.popup && <Popup />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import \"./Task.css\";\r\n\r\nconst Task = (props) => {\r\n  const style_one = {\r\n    color: \"#35DF91\",\r\n  };\r\n  const style_two = {\r\n    color: \"#F47960\",\r\n  };\r\n\r\n  const { text, date, trash, doneTask, id, active, important, finishDate } =\r\n    props;\r\n\r\n  const imp = function (important) {\r\n    if (important === \"planned\") {\r\n      return style_one;\r\n    } else if (important === \"priority\") {\r\n      return style_two;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (active) {\r\n    return (\r\n      <>\r\n        <div className=\"task\">\r\n          <div className=\"task_area\">\r\n            <div className=\"text_area\">\r\n              <button onClick={doneTask.bind(this, id)} className=\"btn_ico\">\r\n                <i className=\"fas fa-check\"></i>\r\n              </button>{\" \"}\r\n              <div>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong style={imp(important)}>{text}</strong>\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <span>do {date}</span>{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"icon_area\">\r\n              <button onClick={() => trash(id)} className=\"btn_ico\">\r\n                <i className=\"fas fa-trash\"></i>\r\n              </button>{\" \"}\r\n              <button\r\n                onClick={(e) => props.changeTask(e, id)}\r\n                className=\"btn_ico\"\r\n              >\r\n                <i className=\"fas fa-edit\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    const time = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <>\r\n        <div className=\"task\">\r\n          <div className=\"task_area\">\r\n            <div className=\"text_area\">\r\n              <div>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>{text}</strong>\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <span>do {date}</span>{\" \"}\r\n                </p>\r\n                <p>Wykonano: {time}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"icon_area\">\r\n              <button onClick={() => trash(id)} className=\"btn_ico\">\r\n                <i className=\"fas fa-trash\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"./TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  const activeTask = props.tasks.filter((item) => item.active);\r\n  const doneTask = props.tasks.filter((item) => !item.active);\r\n\r\n  doneTask.sort((a, b) => b.finishDate - a.finishDate);\r\n  activeTask.sort((a, b) => b.text - a.text);\r\n\r\n  const taskToDo = activeTask.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      text={task.text}\r\n      date={task.date}\r\n      id={task.id}\r\n      important={task.important}\r\n      active={task.active}\r\n      trash={props.trash}\r\n      doneTask={props.done}\r\n      finishDate={task.finishDate}\r\n      changeTask={props.changeTask}\r\n    />\r\n  ));\r\n\r\n  const doneTasks = doneTask.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      text={task.text}\r\n      date={task.date}\r\n      id={task.id}\r\n      active={task.active}\r\n      trash={props.trash}\r\n      doneTask={props.done}\r\n      important={task.important}\r\n      finishDate={task.finishDate}\r\n      changeTask={props.changeTask}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h2>Task to do:</h2>\r\n        {taskToDo.length > 0 ? (\r\n          taskToDo\r\n        ) : (\r\n          <p className=\"message\">There are no tasks to be performed</p>\r\n        )}\r\n      </div>\r\n      <div className=\"done\">\r\n        <h3>\r\n          Done Task: <span style={{ color: \"crimson\" }}>{doneTask.length}</span>{\" \"}\r\n          {doneTask.length > 3 && <p>Shows only 3 last tasks</p>}\r\n        </h3>\r\n        {doneTasks.length > 0 ? (\r\n          doneTasks.slice(0, 3)\r\n        ) : (\r\n          <p className=\"message\">List of done tasks</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"./TaskEdit.css\";\r\n\r\nclass TaskEdit extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n    valuePop: this.props.editText,\r\n  };\r\n\r\n  handleInputPop = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmitPop = (e) => {\r\n    e.preventDefault();\r\n    // const textInput = this.state.value;\r\n    this.props.changeTextInput(this.state.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"popup__task\">\r\n          <div className=\"popup__task_input\">\r\n            <form onSubmit={this.handleSubmitPop}>\r\n              <label>\r\n                {\" \"}\r\n                <input\r\n                  className=\"changeText\"\r\n                  onChange={this.handleInputPop}\r\n                  type=\"text\"\r\n                  placeholder={this.props.editText}\r\n                  value={this.state.value}\r\n                />\r\n                <button className=\"btn_save\">Save</button>\r\n              </label>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskEdit;\r\n","import React, { Component } from \"react\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nimport TaskEdit from \"./TaskEdit\";\n\nimport \"./App.css\";\nclass App extends Component {\n  state = {\n    activeIndex: \"\",\n    textPopup: \"\",\n    isActive: false,\n    task: [\n      {\n        id: 0,\n        text: \"to do 1 \",\n        date: \"2023-11-11\",\n        important: \"planned\",\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 1,\n        text: \"to do 3\",\n        date: \"2023-11-14\",\n        important: \"priority\",\n        active: true,\n        finishDate: null,\n      },\n    ],\n  };\n\n  currentId = 2;\n\n  deleteTask = (id) => {\n    const task = [...this.state.task];\n    const index = task.findIndex((task) => task.id === id);\n    task.splice(index, 1);\n    this.setState({\n      task,\n    });\n  };\n\n  doneTask = (id) => {\n    console.log(\"changestatustaks \" + id);\n    const task = [...this.state.task];\n    task.forEach((item) => {\n      if (item.id === id) {\n        item.active = false;\n        item.finishDate = new Date().getTime();\n      }\n    });\n\n    this.setState({\n      task,\n    });\n  };\n\n  showChangeArea = () => {\n    this.setState({\n      isActive: !this.state.isActive,\n    });\n  };\n\n  changeTextInput = (value) => {\n    const index = this.state.activeIndex;\n\n    const table = [...this.state.task];\n    table.forEach((item) => {\n      if (item.id === index) {\n        item.text = value;\n      }\n      this.setState({\n        task: table,\n        isActive: false,\n      });\n    });\n\n    console.log(value);\n  };\n  handleChangeTask = (e, id) => {\n    const index = id;\n    console.log(index);\n    this.setState({\n      activeIndex: index,\n    });\n    let text = e.currentTarget.parentNode\n      .closest(\".task_area\")\n      .querySelector(\"strong\").textContent;\n\n    this.showChangeArea();\n    this.setState({\n      textPopup: text,\n    });\n\n    console.log(\n      e.currentTarget.parentNode.closest(\".task_area\").querySelector(\"strong\")\n    );\n  };\n\n  addTask = (text, typeTask, date) => {\n    console.log(text, typeTask, date);\n    const task = {\n      id: this.currentId,\n      text,\n      date,\n      important: typeTask,\n      active: true,\n      finishDate: null,\n    };\n    this.currentId++;\n    this.setState((prevState) => ({\n      task: [...prevState.task, task],\n    }));\n    // this.setState({});\n\n    return true;\n  };\n  render() {\n    const activeTasks = this.state.task.filter((item) => item.active);\n    const remainingTasks = activeTasks.length\n      ? activeTasks.length\n      : \"Nie masz więcej zadań\";\n    return (\n      <>\n        <div className=\"app\">\n          <div className=\"circle\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"330\"\n              height=\"290\"\n              viewBox=\"0 0 330 290\"\n            >\n              <ellipse\n                id=\"Ellipse_1\"\n                data-name=\"Ellipse 1\"\n                cx=\"165\"\n                cy=\"145\"\n                rx=\"165\"\n                ry=\"145\"\n                fill=\"#5051e6\"\n              />\n            </svg>\n          </div>\n          <div className=\"smallCircle_one\"></div>\n          <div className=\"smallCircle_two\"></div>\n          <header>\n            <h1>ToDoApp</h1>\n            <h2 className=\"header_title\">\n              {remainingTasks > 0\n                ? `You have ${remainingTasks} remaining task`\n                : `You dont have any task`}{\" \"}\n            </h2>\n          </header>\n          <AddTask addTask={this.addTask} />\n          <TaskList\n            tasks={this.state.task}\n            trash={this.deleteTask}\n            done={this.doneTask}\n            changeTask={this.handleChangeTask}\n          />\n          {this.state.isActive ? (\n            <TaskEdit\n              editText={this.state.textPopup}\n              changeTextInput={this.changeTextInput}\n            />\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}